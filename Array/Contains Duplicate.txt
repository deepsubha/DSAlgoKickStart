/* Contains Duplicate
Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.

Test Cases:
TC 1:
Input: nums = [1,2,3,1]
Output: true

TC 2:
Input: nums = [1,2,3,4]
Output: false

TC 3:
Input: nums = [1,1,1,3,3,4,3,2,4,2]
Output: true

Constraints:

1 <= nums.length <= 105
-109 <= nums[i] <= 109

*/

/* *Proposed Solution*/
class Solution {
    public boolean containsDuplicate(int[] nums) {
        /*
        List<Integer> uniqueList = new ArrayList<Integer>();
        
        for(int i=0; i<nums.length; i++){
            if(!uniqueList.contains(nums[i])) uniqueList.add(nums[i]);
            else return true;
        }
        
        return false;
        */ //This is causing Time Limit Issue.
        Map<Integer, Integer> numberCount = new HashMap<Integer, Integer>();
        for(int i=0; i<nums.length; i++){
            if(numberCount.containsKey(nums[i]))
                //numberCount.replace(nums[i], numberCount.get(nums[i])+1);
                return true;
            else
                numberCount.put(nums[i], 1);
        }
        
        return false;
    }
}