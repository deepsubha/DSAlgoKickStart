 [problem] (https://leetcode.com/problems/lexicographically-smallest-palindrome/) 

/*
 * Intuition:
 * --------------
 * We initialize two pointers and iterate from both left & right end
 * if character mismatch found, we need to replace the bigger character
 * with smaller one.
 * 
 * Complexity:
 * --------------
 * T.C: O(n)
 * S.C: O(n)
 */
class Solution {
    public String makeSmallestPalindrome(String s) {
        
        int n = s.length();
        
        if(n==1) return s;
        
        int l=0,r = n-1;
        
        StringBuilder str = new StringBuilder(s);
        

        while(l<r){
            char charLeft = str.charAt(l);
            char charRight = str.charAt(r);
            
            if(charLeft!=charRight){
                
                if(charLeft<charRight){
                    str.setCharAt(r,charLeft);
                }
                
                else{
                    str.setCharAt(l,charRight);
                }
            }
            
            l++;
            r--;
        }
        
        return str.toString();
    }
}
